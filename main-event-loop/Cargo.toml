[package]
name = "p2p-file-converter"
version = "2.0.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "Peer-to-peer file converter with libp2p networking and tokio async runtime"
license = "MIT"
repository = "https://github.com/username/p2p-file-converter"
readme = "README.md"
keywords = ["p2p", "libp2p", "file-converter", "networking", "async"]
categories = ["network-programming", "asynchronous", "command-line-utilities"]

[lib]
name = "p2p_file_converter"
path = "lib.rs"

[[bin]]
name = "p2p-converter"
path = "main.rs"

[features]
default = ["full"]
full = ["cli", "conversion", "networking"]
cli = ["clap"]
conversion = ["genpdf", "pdf-extract"]
networking = ["libp2p"]

[dependencies]
# Core libp2p networking
libp2p = { version = "0.56", features = [
    "tcp", 
    "noise", 
    "yamux", 
    "swarm", 
    "identify", 
    "ping", 
    "request-response",
    "macros"
] }

# Async runtime and utilities
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
toml = "0.8"
uuid = { version = "1.0", features = ["v4", "serde"] }

# Error handling and logging
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# CLI support
clap = { version = "4.5", features = ["derive"], optional = true }

# File conversion
genpdf = { version = "0.2", optional = true }
pdf-extract = { version = "0.7", optional = true }

# Utilities
fs_extra = "1.3"

[dev-dependencies]
tempfile = "3.0"
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports"] }

[[example]]
name = "simple_receiver"
path = "examples/simple_receiver.rs"

[[example]]
name = "simple_sender"
path = "examples/simple_sender.rs"

[[example]]
name = "interactive_client"
path = "examples/interactive_client.rs"

[[bench]]
name = "event_loop_benchmarks"
path = "benches/event_loop_benchmarks.rs"
harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
